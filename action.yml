name: techdoc-ghpages
author: Thomas Maierhofer - Thomas Maierhofer Consulting
branding:
  icon: book-open
  color: blue
description: 'Build Documentation and publish it on GitHub Pages: renames resulting README.html to index.html. Generates an tech-doc.pdf'

inputs:
  source_dir:
    description: 'Defines the source root directory from where the Documentation will be built.'
    default: './docs'
    required: false
  asciidoctor_params:
    description: 'Extra parameters to pass to the asciidoctor command to customize the process of building the adoc files'
    required: false
  adoc_file_ext:
    description: 'The extension you are using for your AsciiDoc Files'
    default: '.adoc'
    required: false
  pdf_build:
    description: 'Defines if a PDF ebook should be built along with the html files. That will generate an tech-doc.pdf file.'
    default: 'false'
    required: false
  ebook_main_adoc_file:
    description: 'Defines the name of the main AsciiDoc file that will be used if you are generating an ebook in PDF or any other supported format. For instance, if the main ebook file is "ebook.adoc", just inform "ebook" here.'
    default: 'README'
    required: false
  slides_skip_asciidoctor_build:
    description: 'If slides are being generated using AsciiDoc Reveal.js, you may not want to build the regular html files using the asciidoctor command, but just using the asciidoctor-revealjs command. In order to generate only the slides.html instead of the regular html files, set this config to true.'
    default: 'false'
    required: false
  pre_build:
    description: 'Any arbitrary shell command to be executed before the asciidoc build is started. Optional.'
    default: 'echo "No pre build command provided."'
    required: false
  post_build:
    description: 'Any arbitrary shell command to be executed after the asciidoc build is complete and before committing changes on gh-pages branch. Optional.'
    default: 'echo "No post build command provided."'
    required: false
                  
runs: 
  using: docker
  image: Dockerfile
  args:
    - ${{ inputs.source_dir }}
    - ${{ inputs.asciidoctor_params }}
    - ${{ inputs.adoc_file_ext }}
    - ${{ inputs.pdf_build }}
    - ${{ inputs.ebook_main_adoc_file }}
    - ${{ inputs.pre_build }}
    - ${{ inputs.post_build }}